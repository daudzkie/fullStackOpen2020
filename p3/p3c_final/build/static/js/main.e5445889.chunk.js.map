{"version":3,"sources":["services/phbookService.jsx","components/Notification.jsx","App.js","index.js"],"names":["axios","get","newObj","post","id","put","Notification","message","error","styleCheck","color","backgroundColor","fontSize","borderStyle","borderRadius","padding","marginBottom","style","App","useState","entries","setEntries","filter","setFilter","searchName","setSearchName","newName","setNewName","number","setNumber","setMessage","setError","useEffect","phbookService","then","response","data","console","log","type","value","onChange","event","target","person","name","indexOf","onClick","onSubmit","preventDefault","newEntry","find","obj","result","item","window","confirm","concat","setTimeout","placeholder","map","i","key","url","delete","reponse","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e5445889.chunk.js","sourcesContent":["import axios from 'axios'\n// const baseUrl = 'http://localhost:3001/api/persons'\n// const baseUrl = 'https://phonebook-bend.herokuapp.com/api/persons'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    return axios.get(baseUrl)\n}\n\nconst create = newObj => {\n    return axios.post(baseUrl, newObj)\n}\n\nconst update = (id, newObj) => {\n    return axios.put(`${baseUrl}/${id}`, newObj)\n}\n\n// const remove = id => {\n//     console.log(id)\n//     console.log(`${baseUrl}/${id}`)\n\n//     return axios.delete(`${baseUrl}/${id}`, { params: { id: id } })\n    \n// }\n\nexport default { getAll, create, update/*, remove*/ }\n","import React from 'react'\n\nconst Notification = ({ message, error }) => {\n  if (message === null) {\n    return null\n  }\n\n  let styleCheck = ({})\n\n  if (error) {\n    styleCheck = {\n      color: 'red',\n      backgroundColor: '#lime',\n      fontSize: 20,\n      borderStyle: 'solid',\n      borderRadius: 5,\n      padding: 10,\n      marginBottom: 10,   \n    }\n  } else {\n    styleCheck = {\n      color: 'green',\n      backgroundColor: '#00968',\n      fontSize: 20,\n      borderStyle: 'solid',\n      borderRadius: 5,\n      padding: 10,\n      marginBottom: 10,   \n    }\n  }\n\n  return (\n    <div style={styleCheck}>\n      {message}\n    </div>\n  )\n}\n\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport phbookService from './services/phbookService'\nimport Notification from './components/Notification'\nimport axios from 'axios'\n\nconst App = () => {\n  const [entries, setEntries] = useState({})\n  const [filter, setFilter] = useState([])\n  const [searchName, setSearchName] = useState('')\n  const [newName, setNewName] = useState('')\n  const [number, setNumber] = useState('')\n  const [message, setMessage] = useState(null)\n  const [error, setError] = useState(false)\n\n  useEffect(() => {\n    phbookService\n      .getAll()\n      .then(response => {\n        setEntries(response.data)\n      })\n  }, [searchName, newName])\n\n  console.log('Entries Arr', entries)\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    const checkName = obj => obj.name === newName\n    const newEntry = {\n      name: newName,\n      number: number\n    }\n\n    if (!entries.find(checkName)) {      \n\n      phbookService\n        .create(newEntry)\n        .then(response => {\n          setEntries(entries.concat(newEntry))\n          setMessage(newName + ' is successfully added')\n          setError(false)\n        })\n        setTimeout(() => {\n          setMessage(null)},5000)\n\n        setNewName('')\n        setNumber('')      \n    } else {\n      const result = entries.find(item => item.name === newName)\n      // const id = result.id\n      \n      if (window.confirm(newName + ' is already in your contacts. Would you like to update the info?'))\n      phbookService\n        .update(result.id, newEntry)\n        .then(response => {\n          console.log(newName + ' information was updated')\n          setMessage(newName + ' information was updated')\n          setError(false)\n          setNewName('')\n          setNumber('')\n        })\n    }\n  }\n\n  const handleChangeName = (event) => {\n    setNewName(event.target.value)          \n  }\n\n  const handleChangeNum = (event) => {\n    setNumber(event.target.value)\n  }\n\n  const filterNames = (event) => {\n    setSearchName(event.target.value)\n    setFilter(entries.filter(person => \n      person.name && person.name.indexOf(searchName) !== -1))\n  }\n\n  const handleClickDelete = (id, name) => () => {\n    // const url = `https://phonebook-bend.herokuapp.com/api/persons/${id}`\n    const url = `/api/persons/${id}`\n    console.log(id)\n    console.log(name)\n    console.log(url)\n\n    if (window.confirm('Are your sure you want to remove ' + name + ' ?'))\n      axios.delete(url)\n        .then(reponse => {\n          console.log(reponse)\n          setFilter(entries.filter(person =>\n            person.id !== id\n          ))\n        })\n      // phbookService\n      //   .remove(id)\n      //   .then(response => {\n      //     setEntries(response.data)\n      //     // setFilter(entries.filter(person => \n      //     //   person.id !== id\n      //     // ))\n      //     console.log(id)\n      //     console.log(entries)\n          setMessage(name + ' was successfully removed from the server')\n          setError(true)\n          setSearchName('')\n\n          setTimeout(() => {\n            setMessage(null)},5000)\n        // })\n  }\n\n  const handleClickClear = (event) => {\n    setFilter([])\n    setSearchName('')\n  }\n\n  console.log('Filter Array', filter)\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message} error={error}/>\n      <p>filter shown with {' '}\n        <input \n          type='text' \n          value={searchName} \n          onChange={filterNames} ></input>\n        <button onClick={handleClickClear} >clear</button>    \n      </p>\n          \n      <form onSubmit={addPerson}>\n        <div>\n          <p>name:{' '}\n            <input\n              placeholder='name'\n              value={newName}\n              onChange={handleChangeName} >\n            </input>\n          </p>\n          <p>number: {' '}\n            <input\n              placeholder='number'\n              value={number}\n              onChange={handleChangeNum} >\n            </input>\n          </p>\n        </div>\n        <button>Add new</button>\n      </form>\n      <h2>Numbers</h2>\n      {filter.map((person,i) =>\n        <h4 key={i}>\n          {person.id} {person.name} - {person.number} {' '}\n           <button onClick={handleClickDelete(person.id, person.name)}>delete</button>\n        </h4>\n      )}\n      \n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, \n  document.getElementById('root'))"],"sourceRoot":""}